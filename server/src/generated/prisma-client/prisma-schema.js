module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.0). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateFlightController {
  count: Int!
}

type AggregateFlightControllerMerchantLink {
  count: Int!
}

type AggregateLink {
  count: Int!
}

type AggregateMerchant {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVote {
  count: Int!
}

enum Baro {
  BMP388
  BMP280
}

type BatchPayload {
  count: Long!
}

enum CPU {
  STM32F405
  STM32H7400
  STM32F745
  STM32F411
  STM32F722
}

scalar DateTime

type FlightController {
  id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  postedBy: User
  updatedBy: User
  merchantLinks(where: FlightControllerMerchantLinkWhereInput, orderBy: FlightControllerMerchantLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FlightControllerMerchantLink!]
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

type FlightControllerConnection {
  pageInfo: PageInfo!
  edges: [FlightControllerEdge]!
  aggregate: AggregateFlightController!
}

input FlightControllerCreateInput {
  id: ID
  postedBy: UserCreateOneWithoutFlightControllersInput
  updatedBy: UserCreateOneWithoutEditedFlightControllersInput
  merchantLinks: FlightControllerMerchantLinkCreateManyWithoutFlightControllerInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerCreateManyWithoutPostedByInput {
  create: [FlightControllerCreateWithoutPostedByInput!]
  connect: [FlightControllerWhereUniqueInput!]
}

input FlightControllerCreateManyWithoutUpdatedByInput {
  create: [FlightControllerCreateWithoutUpdatedByInput!]
  connect: [FlightControllerWhereUniqueInput!]
}

input FlightControllerCreateOneWithoutMerchantLinksInput {
  create: FlightControllerCreateWithoutMerchantLinksInput
  connect: FlightControllerWhereUniqueInput
}

input FlightControllerCreateWithoutMerchantLinksInput {
  id: ID
  postedBy: UserCreateOneWithoutFlightControllersInput
  updatedBy: UserCreateOneWithoutEditedFlightControllersInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerCreateWithoutPostedByInput {
  id: ID
  updatedBy: UserCreateOneWithoutEditedFlightControllersInput
  merchantLinks: FlightControllerMerchantLinkCreateManyWithoutFlightControllerInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerCreateWithoutUpdatedByInput {
  id: ID
  postedBy: UserCreateOneWithoutFlightControllersInput
  merchantLinks: FlightControllerMerchantLinkCreateManyWithoutFlightControllerInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

type FlightControllerEdge {
  node: FlightController!
  cursor: String!
}

type FlightControllerMerchantLink {
  id: ID!
  merchant: Merchant!
  flightController: FlightController!
  url: String!
  price: Float!
  inStock: Boolean
  postedBy: User!
  createdAt: DateTime!
  updatedAt: DateTime
}

type FlightControllerMerchantLinkConnection {
  pageInfo: PageInfo!
  edges: [FlightControllerMerchantLinkEdge]!
  aggregate: AggregateFlightControllerMerchantLink!
}

input FlightControllerMerchantLinkCreateInput {
  id: ID
  merchant: MerchantCreateOneWithoutFlightControllersInput!
  flightController: FlightControllerCreateOneWithoutMerchantLinksInput!
  url: String!
  price: Float!
  inStock: Boolean
  postedBy: UserCreateOneWithoutAddedFlightControllersInput!
}

input FlightControllerMerchantLinkCreateManyWithoutFlightControllerInput {
  create: [FlightControllerMerchantLinkCreateWithoutFlightControllerInput!]
  connect: [FlightControllerMerchantLinkWhereUniqueInput!]
}

input FlightControllerMerchantLinkCreateManyWithoutMerchantInput {
  create: [FlightControllerMerchantLinkCreateWithoutMerchantInput!]
  connect: [FlightControllerMerchantLinkWhereUniqueInput!]
}

input FlightControllerMerchantLinkCreateManyWithoutPostedByInput {
  create: [FlightControllerMerchantLinkCreateWithoutPostedByInput!]
  connect: [FlightControllerMerchantLinkWhereUniqueInput!]
}

input FlightControllerMerchantLinkCreateWithoutFlightControllerInput {
  id: ID
  merchant: MerchantCreateOneWithoutFlightControllersInput!
  url: String!
  price: Float!
  inStock: Boolean
  postedBy: UserCreateOneWithoutAddedFlightControllersInput!
}

input FlightControllerMerchantLinkCreateWithoutMerchantInput {
  id: ID
  flightController: FlightControllerCreateOneWithoutMerchantLinksInput!
  url: String!
  price: Float!
  inStock: Boolean
  postedBy: UserCreateOneWithoutAddedFlightControllersInput!
}

input FlightControllerMerchantLinkCreateWithoutPostedByInput {
  id: ID
  merchant: MerchantCreateOneWithoutFlightControllersInput!
  flightController: FlightControllerCreateOneWithoutMerchantLinksInput!
  url: String!
  price: Float!
  inStock: Boolean
}

type FlightControllerMerchantLinkEdge {
  node: FlightControllerMerchantLink!
  cursor: String!
}

enum FlightControllerMerchantLinkOrderByInput {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  price_ASC
  price_DESC
  inStock_ASC
  inStock_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type FlightControllerMerchantLinkPreviousValues {
  id: ID!
  url: String!
  price: Float!
  inStock: Boolean
  createdAt: DateTime!
  updatedAt: DateTime
}

input FlightControllerMerchantLinkScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  inStock: Boolean
  inStock_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FlightControllerMerchantLinkScalarWhereInput!]
  OR: [FlightControllerMerchantLinkScalarWhereInput!]
  NOT: [FlightControllerMerchantLinkScalarWhereInput!]
}

type FlightControllerMerchantLinkSubscriptionPayload {
  mutation: MutationType!
  node: FlightControllerMerchantLink
  updatedFields: [String!]
  previousValues: FlightControllerMerchantLinkPreviousValues
}

input FlightControllerMerchantLinkSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FlightControllerMerchantLinkWhereInput
  AND: [FlightControllerMerchantLinkSubscriptionWhereInput!]
  OR: [FlightControllerMerchantLinkSubscriptionWhereInput!]
  NOT: [FlightControllerMerchantLinkSubscriptionWhereInput!]
}

input FlightControllerMerchantLinkUpdateInput {
  merchant: MerchantUpdateOneRequiredWithoutFlightControllersInput
  flightController: FlightControllerUpdateOneRequiredWithoutMerchantLinksInput
  url: String
  price: Float
  inStock: Boolean
  postedBy: UserUpdateOneRequiredWithoutAddedFlightControllersInput
}

input FlightControllerMerchantLinkUpdateManyDataInput {
  url: String
  price: Float
  inStock: Boolean
}

input FlightControllerMerchantLinkUpdateManyMutationInput {
  url: String
  price: Float
  inStock: Boolean
}

input FlightControllerMerchantLinkUpdateManyWithoutFlightControllerInput {
  create: [FlightControllerMerchantLinkCreateWithoutFlightControllerInput!]
  delete: [FlightControllerMerchantLinkWhereUniqueInput!]
  connect: [FlightControllerMerchantLinkWhereUniqueInput!]
  set: [FlightControllerMerchantLinkWhereUniqueInput!]
  disconnect: [FlightControllerMerchantLinkWhereUniqueInput!]
  update: [FlightControllerMerchantLinkUpdateWithWhereUniqueWithoutFlightControllerInput!]
  upsert: [FlightControllerMerchantLinkUpsertWithWhereUniqueWithoutFlightControllerInput!]
  deleteMany: [FlightControllerMerchantLinkScalarWhereInput!]
  updateMany: [FlightControllerMerchantLinkUpdateManyWithWhereNestedInput!]
}

input FlightControllerMerchantLinkUpdateManyWithoutMerchantInput {
  create: [FlightControllerMerchantLinkCreateWithoutMerchantInput!]
  delete: [FlightControllerMerchantLinkWhereUniqueInput!]
  connect: [FlightControllerMerchantLinkWhereUniqueInput!]
  set: [FlightControllerMerchantLinkWhereUniqueInput!]
  disconnect: [FlightControllerMerchantLinkWhereUniqueInput!]
  update: [FlightControllerMerchantLinkUpdateWithWhereUniqueWithoutMerchantInput!]
  upsert: [FlightControllerMerchantLinkUpsertWithWhereUniqueWithoutMerchantInput!]
  deleteMany: [FlightControllerMerchantLinkScalarWhereInput!]
  updateMany: [FlightControllerMerchantLinkUpdateManyWithWhereNestedInput!]
}

input FlightControllerMerchantLinkUpdateManyWithoutPostedByInput {
  create: [FlightControllerMerchantLinkCreateWithoutPostedByInput!]
  delete: [FlightControllerMerchantLinkWhereUniqueInput!]
  connect: [FlightControllerMerchantLinkWhereUniqueInput!]
  set: [FlightControllerMerchantLinkWhereUniqueInput!]
  disconnect: [FlightControllerMerchantLinkWhereUniqueInput!]
  update: [FlightControllerMerchantLinkUpdateWithWhereUniqueWithoutPostedByInput!]
  upsert: [FlightControllerMerchantLinkUpsertWithWhereUniqueWithoutPostedByInput!]
  deleteMany: [FlightControllerMerchantLinkScalarWhereInput!]
  updateMany: [FlightControllerMerchantLinkUpdateManyWithWhereNestedInput!]
}

input FlightControllerMerchantLinkUpdateManyWithWhereNestedInput {
  where: FlightControllerMerchantLinkScalarWhereInput!
  data: FlightControllerMerchantLinkUpdateManyDataInput!
}

input FlightControllerMerchantLinkUpdateWithoutFlightControllerDataInput {
  merchant: MerchantUpdateOneRequiredWithoutFlightControllersInput
  url: String
  price: Float
  inStock: Boolean
  postedBy: UserUpdateOneRequiredWithoutAddedFlightControllersInput
}

input FlightControllerMerchantLinkUpdateWithoutMerchantDataInput {
  flightController: FlightControllerUpdateOneRequiredWithoutMerchantLinksInput
  url: String
  price: Float
  inStock: Boolean
  postedBy: UserUpdateOneRequiredWithoutAddedFlightControllersInput
}

input FlightControllerMerchantLinkUpdateWithoutPostedByDataInput {
  merchant: MerchantUpdateOneRequiredWithoutFlightControllersInput
  flightController: FlightControllerUpdateOneRequiredWithoutMerchantLinksInput
  url: String
  price: Float
  inStock: Boolean
}

input FlightControllerMerchantLinkUpdateWithWhereUniqueWithoutFlightControllerInput {
  where: FlightControllerMerchantLinkWhereUniqueInput!
  data: FlightControllerMerchantLinkUpdateWithoutFlightControllerDataInput!
}

input FlightControllerMerchantLinkUpdateWithWhereUniqueWithoutMerchantInput {
  where: FlightControllerMerchantLinkWhereUniqueInput!
  data: FlightControllerMerchantLinkUpdateWithoutMerchantDataInput!
}

input FlightControllerMerchantLinkUpdateWithWhereUniqueWithoutPostedByInput {
  where: FlightControllerMerchantLinkWhereUniqueInput!
  data: FlightControllerMerchantLinkUpdateWithoutPostedByDataInput!
}

input FlightControllerMerchantLinkUpsertWithWhereUniqueWithoutFlightControllerInput {
  where: FlightControllerMerchantLinkWhereUniqueInput!
  update: FlightControllerMerchantLinkUpdateWithoutFlightControllerDataInput!
  create: FlightControllerMerchantLinkCreateWithoutFlightControllerInput!
}

input FlightControllerMerchantLinkUpsertWithWhereUniqueWithoutMerchantInput {
  where: FlightControllerMerchantLinkWhereUniqueInput!
  update: FlightControllerMerchantLinkUpdateWithoutMerchantDataInput!
  create: FlightControllerMerchantLinkCreateWithoutMerchantInput!
}

input FlightControllerMerchantLinkUpsertWithWhereUniqueWithoutPostedByInput {
  where: FlightControllerMerchantLinkWhereUniqueInput!
  update: FlightControllerMerchantLinkUpdateWithoutPostedByDataInput!
  create: FlightControllerMerchantLinkCreateWithoutPostedByInput!
}

input FlightControllerMerchantLinkWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  merchant: MerchantWhereInput
  flightController: FlightControllerWhereInput
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  inStock: Boolean
  inStock_not: Boolean
  postedBy: UserWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FlightControllerMerchantLinkWhereInput!]
  OR: [FlightControllerMerchantLinkWhereInput!]
  NOT: [FlightControllerMerchantLinkWhereInput!]
}

input FlightControllerMerchantLinkWhereUniqueInput {
  id: ID
}

enum FlightControllerOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  disabled_ASC
  disabled_DESC
  releaseDate_ASC
  releaseDate_DESC
  uarts_ASC
  uarts_DESC
  gyroOne_ASC
  gyroOne_DESC
  gyroTwo_ASC
  gyroTwo_DESC
  weightInGrams_ASC
  weightInGrams_DESC
  cpu_ASC
  cpu_DESC
  description_ASC
  description_DESC
  dimensions_ASC
  dimensions_DESC
  holePattern_ASC
  holePattern_DESC
  voltageInputMin_ASC
  voltageInputMin_DESC
  voltageInputMax_ASC
  voltageInputMax_DESC
  osd_ASC
  osd_DESC
  barometer_ASC
  barometer_DESC
  spektrumPort_ASC
  spektrumPort_DESC
  ledWS2812Support_ASC
  ledWS2812Support_DESC
  beeperOnBoard_ASC
  beeperOnBoard_DESC
  antiVibrationGrommets_ASC
  antiVibrationGrommets_DESC
  builtInReceiver_ASC
  builtInReceiver_DESC
  currentSensor_ASC
  currentSensor_DESC
  cameraControl_ASC
  cameraControl_DESC
  pdb_ASC
  pdb_DESC
  threeVoltOutput_ASC
  threeVoltOutput_DESC
  fiveVoltOutput_ASC
  fiveVoltOutput_DESC
  eightVoltOutput_ASC
  eightVoltOutput_DESC
  nineVoltOutput_ASC
  nineVoltOutput_DESC
  onBoardFlash_ASC
  onBoardFlash_DESC
  sdCardSlot_ASC
  sdCardSlot_DESC
  fourInOneConnector_ASC
  fourInOneConnector_DESC
  currentSensorRating_ASC
  currentSensorRating_DESC
  maxCurrent_ASC
  maxCurrent_DESC
  holeSize_ASC
  holeSize_DESC
}

type FlightControllerPreviousValues {
  id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  currentSensor: Boolean
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  disabled: Boolean
  disabled_not: Boolean
  releaseDate: DateTime
  releaseDate_not: DateTime
  releaseDate_in: [DateTime!]
  releaseDate_not_in: [DateTime!]
  releaseDate_lt: DateTime
  releaseDate_lte: DateTime
  releaseDate_gt: DateTime
  releaseDate_gte: DateTime
  uarts: Int
  uarts_not: Int
  uarts_in: [Int!]
  uarts_not_in: [Int!]
  uarts_lt: Int
  uarts_lte: Int
  uarts_gt: Int
  uarts_gte: Int
  gyroOne: Gyro
  gyroOne_not: Gyro
  gyroOne_in: [Gyro!]
  gyroOne_not_in: [Gyro!]
  gyroTwo: Gyro
  gyroTwo_not: Gyro
  gyroTwo_in: [Gyro!]
  gyroTwo_not_in: [Gyro!]
  weightInGrams: Float
  weightInGrams_not: Float
  weightInGrams_in: [Float!]
  weightInGrams_not_in: [Float!]
  weightInGrams_lt: Float
  weightInGrams_lte: Float
  weightInGrams_gt: Float
  weightInGrams_gte: Float
  cpu: CPU
  cpu_not: CPU
  cpu_in: [CPU!]
  cpu_not_in: [CPU!]
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  dimensions: String
  dimensions_not: String
  dimensions_in: [String!]
  dimensions_not_in: [String!]
  dimensions_lt: String
  dimensions_lte: String
  dimensions_gt: String
  dimensions_gte: String
  dimensions_contains: String
  dimensions_not_contains: String
  dimensions_starts_with: String
  dimensions_not_starts_with: String
  dimensions_ends_with: String
  dimensions_not_ends_with: String
  holePattern: HolePattern
  holePattern_not: HolePattern
  holePattern_in: [HolePattern!]
  holePattern_not_in: [HolePattern!]
  voltageInputMin: Float
  voltageInputMin_not: Float
  voltageInputMin_in: [Float!]
  voltageInputMin_not_in: [Float!]
  voltageInputMin_lt: Float
  voltageInputMin_lte: Float
  voltageInputMin_gt: Float
  voltageInputMin_gte: Float
  voltageInputMax: Float
  voltageInputMax_not: Float
  voltageInputMax_in: [Float!]
  voltageInputMax_not_in: [Float!]
  voltageInputMax_lt: Float
  voltageInputMax_lte: Float
  voltageInputMax_gt: Float
  voltageInputMax_gte: Float
  osd: Boolean
  osd_not: Boolean
  barometer: Baro
  barometer_not: Baro
  barometer_in: [Baro!]
  barometer_not_in: [Baro!]
  spektrumPort: Boolean
  spektrumPort_not: Boolean
  ledWS2812Support: Boolean
  ledWS2812Support_not: Boolean
  beeperOnBoard: Boolean
  beeperOnBoard_not: Boolean
  antiVibrationGrommets: Boolean
  antiVibrationGrommets_not: Boolean
  builtInReceiver: ReceiverProtocol
  builtInReceiver_not: ReceiverProtocol
  builtInReceiver_in: [ReceiverProtocol!]
  builtInReceiver_not_in: [ReceiverProtocol!]
  currentSensor: Boolean
  currentSensor_not: Boolean
  cameraControl: Boolean
  cameraControl_not: Boolean
  pdb: Boolean
  pdb_not: Boolean
  threeVoltOutput: Float
  threeVoltOutput_not: Float
  threeVoltOutput_in: [Float!]
  threeVoltOutput_not_in: [Float!]
  threeVoltOutput_lt: Float
  threeVoltOutput_lte: Float
  threeVoltOutput_gt: Float
  threeVoltOutput_gte: Float
  fiveVoltOutput: Float
  fiveVoltOutput_not: Float
  fiveVoltOutput_in: [Float!]
  fiveVoltOutput_not_in: [Float!]
  fiveVoltOutput_lt: Float
  fiveVoltOutput_lte: Float
  fiveVoltOutput_gt: Float
  fiveVoltOutput_gte: Float
  eightVoltOutput: Float
  eightVoltOutput_not: Float
  eightVoltOutput_in: [Float!]
  eightVoltOutput_not_in: [Float!]
  eightVoltOutput_lt: Float
  eightVoltOutput_lte: Float
  eightVoltOutput_gt: Float
  eightVoltOutput_gte: Float
  nineVoltOutput: Float
  nineVoltOutput_not: Float
  nineVoltOutput_in: [Float!]
  nineVoltOutput_not_in: [Float!]
  nineVoltOutput_lt: Float
  nineVoltOutput_lte: Float
  nineVoltOutput_gt: Float
  nineVoltOutput_gte: Float
  onBoardFlash: Int
  onBoardFlash_not: Int
  onBoardFlash_in: [Int!]
  onBoardFlash_not_in: [Int!]
  onBoardFlash_lt: Int
  onBoardFlash_lte: Int
  onBoardFlash_gt: Int
  onBoardFlash_gte: Int
  sdCardSlot: Boolean
  sdCardSlot_not: Boolean
  fourInOneConnector: Boolean
  fourInOneConnector_not: Boolean
  currentSensorRating: Float
  currentSensorRating_not: Float
  currentSensorRating_in: [Float!]
  currentSensorRating_not_in: [Float!]
  currentSensorRating_lt: Float
  currentSensorRating_lte: Float
  currentSensorRating_gt: Float
  currentSensorRating_gte: Float
  maxCurrent: Float
  maxCurrent_not: Float
  maxCurrent_in: [Float!]
  maxCurrent_not_in: [Float!]
  maxCurrent_lt: Float
  maxCurrent_lte: Float
  maxCurrent_gt: Float
  maxCurrent_gte: Float
  holeSize: HoleSize
  holeSize_not: HoleSize
  holeSize_in: [HoleSize!]
  holeSize_not_in: [HoleSize!]
  AND: [FlightControllerScalarWhereInput!]
  OR: [FlightControllerScalarWhereInput!]
  NOT: [FlightControllerScalarWhereInput!]
}

type FlightControllerSubscriptionPayload {
  mutation: MutationType!
  node: FlightController
  updatedFields: [String!]
  previousValues: FlightControllerPreviousValues
}

input FlightControllerSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FlightControllerWhereInput
  AND: [FlightControllerSubscriptionWhereInput!]
  OR: [FlightControllerSubscriptionWhereInput!]
  NOT: [FlightControllerSubscriptionWhereInput!]
}

input FlightControllerUpdateInput {
  postedBy: UserUpdateOneWithoutFlightControllersInput
  updatedBy: UserUpdateOneWithoutEditedFlightControllersInput
  merchantLinks: FlightControllerMerchantLinkUpdateManyWithoutFlightControllerInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  currentSensor: Boolean
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerUpdateManyDataInput {
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  currentSensor: Boolean
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerUpdateManyMutationInput {
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  currentSensor: Boolean
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerUpdateManyWithoutPostedByInput {
  create: [FlightControllerCreateWithoutPostedByInput!]
  delete: [FlightControllerWhereUniqueInput!]
  connect: [FlightControllerWhereUniqueInput!]
  set: [FlightControllerWhereUniqueInput!]
  disconnect: [FlightControllerWhereUniqueInput!]
  update: [FlightControllerUpdateWithWhereUniqueWithoutPostedByInput!]
  upsert: [FlightControllerUpsertWithWhereUniqueWithoutPostedByInput!]
  deleteMany: [FlightControllerScalarWhereInput!]
  updateMany: [FlightControllerUpdateManyWithWhereNestedInput!]
}

input FlightControllerUpdateManyWithoutUpdatedByInput {
  create: [FlightControllerCreateWithoutUpdatedByInput!]
  delete: [FlightControllerWhereUniqueInput!]
  connect: [FlightControllerWhereUniqueInput!]
  set: [FlightControllerWhereUniqueInput!]
  disconnect: [FlightControllerWhereUniqueInput!]
  update: [FlightControllerUpdateWithWhereUniqueWithoutUpdatedByInput!]
  upsert: [FlightControllerUpsertWithWhereUniqueWithoutUpdatedByInput!]
  deleteMany: [FlightControllerScalarWhereInput!]
  updateMany: [FlightControllerUpdateManyWithWhereNestedInput!]
}

input FlightControllerUpdateManyWithWhereNestedInput {
  where: FlightControllerScalarWhereInput!
  data: FlightControllerUpdateManyDataInput!
}

input FlightControllerUpdateOneRequiredWithoutMerchantLinksInput {
  create: FlightControllerCreateWithoutMerchantLinksInput
  update: FlightControllerUpdateWithoutMerchantLinksDataInput
  upsert: FlightControllerUpsertWithoutMerchantLinksInput
  connect: FlightControllerWhereUniqueInput
}

input FlightControllerUpdateWithoutMerchantLinksDataInput {
  postedBy: UserUpdateOneWithoutFlightControllersInput
  updatedBy: UserUpdateOneWithoutEditedFlightControllersInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  currentSensor: Boolean
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerUpdateWithoutPostedByDataInput {
  updatedBy: UserUpdateOneWithoutEditedFlightControllersInput
  merchantLinks: FlightControllerMerchantLinkUpdateManyWithoutFlightControllerInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  currentSensor: Boolean
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerUpdateWithoutUpdatedByDataInput {
  postedBy: UserUpdateOneWithoutFlightControllersInput
  merchantLinks: FlightControllerMerchantLinkUpdateManyWithoutFlightControllerInput
  name: String
  disabled: Boolean
  releaseDate: DateTime
  uarts: Int
  gyroOne: Gyro
  gyroTwo: Gyro
  weightInGrams: Float
  cpu: CPU
  description: String
  dimensions: String
  holePattern: HolePattern
  voltageInputMin: Float
  voltageInputMax: Float
  osd: Boolean
  barometer: Baro
  spektrumPort: Boolean
  ledWS2812Support: Boolean
  beeperOnBoard: Boolean
  antiVibrationGrommets: Boolean
  builtInReceiver: ReceiverProtocol
  currentSensor: Boolean
  cameraControl: Boolean
  pdb: Boolean
  threeVoltOutput: Float
  fiveVoltOutput: Float
  eightVoltOutput: Float
  nineVoltOutput: Float
  onBoardFlash: Int
  sdCardSlot: Boolean
  fourInOneConnector: Boolean
  currentSensorRating: Float
  maxCurrent: Float
  holeSize: HoleSize
}

input FlightControllerUpdateWithWhereUniqueWithoutPostedByInput {
  where: FlightControllerWhereUniqueInput!
  data: FlightControllerUpdateWithoutPostedByDataInput!
}

input FlightControllerUpdateWithWhereUniqueWithoutUpdatedByInput {
  where: FlightControllerWhereUniqueInput!
  data: FlightControllerUpdateWithoutUpdatedByDataInput!
}

input FlightControllerUpsertWithoutMerchantLinksInput {
  update: FlightControllerUpdateWithoutMerchantLinksDataInput!
  create: FlightControllerCreateWithoutMerchantLinksInput!
}

input FlightControllerUpsertWithWhereUniqueWithoutPostedByInput {
  where: FlightControllerWhereUniqueInput!
  update: FlightControllerUpdateWithoutPostedByDataInput!
  create: FlightControllerCreateWithoutPostedByInput!
}

input FlightControllerUpsertWithWhereUniqueWithoutUpdatedByInput {
  where: FlightControllerWhereUniqueInput!
  update: FlightControllerUpdateWithoutUpdatedByDataInput!
  create: FlightControllerCreateWithoutUpdatedByInput!
}

input FlightControllerWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  postedBy: UserWhereInput
  updatedBy: UserWhereInput
  merchantLinks_every: FlightControllerMerchantLinkWhereInput
  merchantLinks_some: FlightControllerMerchantLinkWhereInput
  merchantLinks_none: FlightControllerMerchantLinkWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  disabled: Boolean
  disabled_not: Boolean
  releaseDate: DateTime
  releaseDate_not: DateTime
  releaseDate_in: [DateTime!]
  releaseDate_not_in: [DateTime!]
  releaseDate_lt: DateTime
  releaseDate_lte: DateTime
  releaseDate_gt: DateTime
  releaseDate_gte: DateTime
  uarts: Int
  uarts_not: Int
  uarts_in: [Int!]
  uarts_not_in: [Int!]
  uarts_lt: Int
  uarts_lte: Int
  uarts_gt: Int
  uarts_gte: Int
  gyroOne: Gyro
  gyroOne_not: Gyro
  gyroOne_in: [Gyro!]
  gyroOne_not_in: [Gyro!]
  gyroTwo: Gyro
  gyroTwo_not: Gyro
  gyroTwo_in: [Gyro!]
  gyroTwo_not_in: [Gyro!]
  weightInGrams: Float
  weightInGrams_not: Float
  weightInGrams_in: [Float!]
  weightInGrams_not_in: [Float!]
  weightInGrams_lt: Float
  weightInGrams_lte: Float
  weightInGrams_gt: Float
  weightInGrams_gte: Float
  cpu: CPU
  cpu_not: CPU
  cpu_in: [CPU!]
  cpu_not_in: [CPU!]
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  dimensions: String
  dimensions_not: String
  dimensions_in: [String!]
  dimensions_not_in: [String!]
  dimensions_lt: String
  dimensions_lte: String
  dimensions_gt: String
  dimensions_gte: String
  dimensions_contains: String
  dimensions_not_contains: String
  dimensions_starts_with: String
  dimensions_not_starts_with: String
  dimensions_ends_with: String
  dimensions_not_ends_with: String
  holePattern: HolePattern
  holePattern_not: HolePattern
  holePattern_in: [HolePattern!]
  holePattern_not_in: [HolePattern!]
  voltageInputMin: Float
  voltageInputMin_not: Float
  voltageInputMin_in: [Float!]
  voltageInputMin_not_in: [Float!]
  voltageInputMin_lt: Float
  voltageInputMin_lte: Float
  voltageInputMin_gt: Float
  voltageInputMin_gte: Float
  voltageInputMax: Float
  voltageInputMax_not: Float
  voltageInputMax_in: [Float!]
  voltageInputMax_not_in: [Float!]
  voltageInputMax_lt: Float
  voltageInputMax_lte: Float
  voltageInputMax_gt: Float
  voltageInputMax_gte: Float
  osd: Boolean
  osd_not: Boolean
  barometer: Baro
  barometer_not: Baro
  barometer_in: [Baro!]
  barometer_not_in: [Baro!]
  spektrumPort: Boolean
  spektrumPort_not: Boolean
  ledWS2812Support: Boolean
  ledWS2812Support_not: Boolean
  beeperOnBoard: Boolean
  beeperOnBoard_not: Boolean
  antiVibrationGrommets: Boolean
  antiVibrationGrommets_not: Boolean
  builtInReceiver: ReceiverProtocol
  builtInReceiver_not: ReceiverProtocol
  builtInReceiver_in: [ReceiverProtocol!]
  builtInReceiver_not_in: [ReceiverProtocol!]
  currentSensor: Boolean
  currentSensor_not: Boolean
  cameraControl: Boolean
  cameraControl_not: Boolean
  pdb: Boolean
  pdb_not: Boolean
  threeVoltOutput: Float
  threeVoltOutput_not: Float
  threeVoltOutput_in: [Float!]
  threeVoltOutput_not_in: [Float!]
  threeVoltOutput_lt: Float
  threeVoltOutput_lte: Float
  threeVoltOutput_gt: Float
  threeVoltOutput_gte: Float
  fiveVoltOutput: Float
  fiveVoltOutput_not: Float
  fiveVoltOutput_in: [Float!]
  fiveVoltOutput_not_in: [Float!]
  fiveVoltOutput_lt: Float
  fiveVoltOutput_lte: Float
  fiveVoltOutput_gt: Float
  fiveVoltOutput_gte: Float
  eightVoltOutput: Float
  eightVoltOutput_not: Float
  eightVoltOutput_in: [Float!]
  eightVoltOutput_not_in: [Float!]
  eightVoltOutput_lt: Float
  eightVoltOutput_lte: Float
  eightVoltOutput_gt: Float
  eightVoltOutput_gte: Float
  nineVoltOutput: Float
  nineVoltOutput_not: Float
  nineVoltOutput_in: [Float!]
  nineVoltOutput_not_in: [Float!]
  nineVoltOutput_lt: Float
  nineVoltOutput_lte: Float
  nineVoltOutput_gt: Float
  nineVoltOutput_gte: Float
  onBoardFlash: Int
  onBoardFlash_not: Int
  onBoardFlash_in: [Int!]
  onBoardFlash_not_in: [Int!]
  onBoardFlash_lt: Int
  onBoardFlash_lte: Int
  onBoardFlash_gt: Int
  onBoardFlash_gte: Int
  sdCardSlot: Boolean
  sdCardSlot_not: Boolean
  fourInOneConnector: Boolean
  fourInOneConnector_not: Boolean
  currentSensorRating: Float
  currentSensorRating_not: Float
  currentSensorRating_in: [Float!]
  currentSensorRating_not_in: [Float!]
  currentSensorRating_lt: Float
  currentSensorRating_lte: Float
  currentSensorRating_gt: Float
  currentSensorRating_gte: Float
  maxCurrent: Float
  maxCurrent_not: Float
  maxCurrent_in: [Float!]
  maxCurrent_not_in: [Float!]
  maxCurrent_lt: Float
  maxCurrent_lte: Float
  maxCurrent_gt: Float
  maxCurrent_gte: Float
  holeSize: HoleSize
  holeSize_not: HoleSize
  holeSize_in: [HoleSize!]
  holeSize_not_in: [HoleSize!]
  AND: [FlightControllerWhereInput!]
  OR: [FlightControllerWhereInput!]
  NOT: [FlightControllerWhereInput!]
}

input FlightControllerWhereUniqueInput {
  id: ID
}

enum Gyro {
  MPU6000
  ICM20689
}

enum HolePattern {
  SIXTEEN
  TWENTY
  THIRTY
}

enum HoleSize {
  M3
  M2
}

type Link {
  id: ID!
  createdAt: DateTime!
  description: String!
  url: String!
  postedBy: User
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]
}

type LinkConnection {
  pageInfo: PageInfo!
  edges: [LinkEdge]!
  aggregate: AggregateLink!
}

input LinkCreateInput {
  id: ID
  description: String!
  url: String!
  postedBy: UserCreateOneWithoutLinksInput
  votes: VoteCreateManyWithoutLinkInput
}

input LinkCreateManyWithoutPostedByInput {
  create: [LinkCreateWithoutPostedByInput!]
  connect: [LinkWhereUniqueInput!]
}

input LinkCreateOneWithoutVotesInput {
  create: LinkCreateWithoutVotesInput
  connect: LinkWhereUniqueInput
}

input LinkCreateWithoutPostedByInput {
  id: ID
  description: String!
  url: String!
  votes: VoteCreateManyWithoutLinkInput
}

input LinkCreateWithoutVotesInput {
  id: ID
  description: String!
  url: String!
  postedBy: UserCreateOneWithoutLinksInput
}

type LinkEdge {
  node: Link!
  cursor: String!
}

enum LinkOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  url_ASC
  url_DESC
}

type LinkPreviousValues {
  id: ID!
  createdAt: DateTime!
  description: String!
  url: String!
}

input LinkScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  AND: [LinkScalarWhereInput!]
  OR: [LinkScalarWhereInput!]
  NOT: [LinkScalarWhereInput!]
}

type LinkSubscriptionPayload {
  mutation: MutationType!
  node: Link
  updatedFields: [String!]
  previousValues: LinkPreviousValues
}

input LinkSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: LinkWhereInput
  AND: [LinkSubscriptionWhereInput!]
  OR: [LinkSubscriptionWhereInput!]
  NOT: [LinkSubscriptionWhereInput!]
}

input LinkUpdateInput {
  description: String
  url: String
  postedBy: UserUpdateOneWithoutLinksInput
  votes: VoteUpdateManyWithoutLinkInput
}

input LinkUpdateManyDataInput {
  description: String
  url: String
}

input LinkUpdateManyMutationInput {
  description: String
  url: String
}

input LinkUpdateManyWithoutPostedByInput {
  create: [LinkCreateWithoutPostedByInput!]
  delete: [LinkWhereUniqueInput!]
  connect: [LinkWhereUniqueInput!]
  set: [LinkWhereUniqueInput!]
  disconnect: [LinkWhereUniqueInput!]
  update: [LinkUpdateWithWhereUniqueWithoutPostedByInput!]
  upsert: [LinkUpsertWithWhereUniqueWithoutPostedByInput!]
  deleteMany: [LinkScalarWhereInput!]
  updateMany: [LinkUpdateManyWithWhereNestedInput!]
}

input LinkUpdateManyWithWhereNestedInput {
  where: LinkScalarWhereInput!
  data: LinkUpdateManyDataInput!
}

input LinkUpdateOneRequiredWithoutVotesInput {
  create: LinkCreateWithoutVotesInput
  update: LinkUpdateWithoutVotesDataInput
  upsert: LinkUpsertWithoutVotesInput
  connect: LinkWhereUniqueInput
}

input LinkUpdateWithoutPostedByDataInput {
  description: String
  url: String
  votes: VoteUpdateManyWithoutLinkInput
}

input LinkUpdateWithoutVotesDataInput {
  description: String
  url: String
  postedBy: UserUpdateOneWithoutLinksInput
}

input LinkUpdateWithWhereUniqueWithoutPostedByInput {
  where: LinkWhereUniqueInput!
  data: LinkUpdateWithoutPostedByDataInput!
}

input LinkUpsertWithoutVotesInput {
  update: LinkUpdateWithoutVotesDataInput!
  create: LinkCreateWithoutVotesInput!
}

input LinkUpsertWithWhereUniqueWithoutPostedByInput {
  where: LinkWhereUniqueInput!
  update: LinkUpdateWithoutPostedByDataInput!
  create: LinkCreateWithoutPostedByInput!
}

input LinkWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  postedBy: UserWhereInput
  votes_every: VoteWhereInput
  votes_some: VoteWhereInput
  votes_none: VoteWhereInput
  AND: [LinkWhereInput!]
  OR: [LinkWhereInput!]
  NOT: [LinkWhereInput!]
}

input LinkWhereUniqueInput {
  id: ID
}

scalar Long

type Merchant {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime
  postedBy: User
  updatedBy: User
  flightControllers(where: FlightControllerMerchantLinkWhereInput, orderBy: FlightControllerMerchantLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FlightControllerMerchantLink!]
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

type MerchantConnection {
  pageInfo: PageInfo!
  edges: [MerchantEdge]!
  aggregate: AggregateMerchant!
}

input MerchantCreateInput {
  id: ID
  postedBy: UserCreateOneWithoutAddedMerchantsInput
  updatedBy: UserCreateOneWithoutEditedMerchantsInput
  flightControllers: FlightControllerMerchantLinkCreateManyWithoutMerchantInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantCreateManyWithoutPostedByInput {
  create: [MerchantCreateWithoutPostedByInput!]
  connect: [MerchantWhereUniqueInput!]
}

input MerchantCreateManyWithoutUpdatedByInput {
  create: [MerchantCreateWithoutUpdatedByInput!]
  connect: [MerchantWhereUniqueInput!]
}

input MerchantCreateOneWithoutFlightControllersInput {
  create: MerchantCreateWithoutFlightControllersInput
  connect: MerchantWhereUniqueInput
}

input MerchantCreateWithoutFlightControllersInput {
  id: ID
  postedBy: UserCreateOneWithoutAddedMerchantsInput
  updatedBy: UserCreateOneWithoutEditedMerchantsInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantCreateWithoutPostedByInput {
  id: ID
  updatedBy: UserCreateOneWithoutEditedMerchantsInput
  flightControllers: FlightControllerMerchantLinkCreateManyWithoutMerchantInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantCreateWithoutUpdatedByInput {
  id: ID
  postedBy: UserCreateOneWithoutAddedMerchantsInput
  flightControllers: FlightControllerMerchantLinkCreateManyWithoutMerchantInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

type MerchantEdge {
  node: Merchant!
  cursor: String!
}

enum MerchantOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  url_ASC
  url_DESC
  affiliateId_ASC
  affiliateId_DESC
  disabled_ASC
  disabled_DESC
}

type MerchantPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  affiliateId: String
  affiliateId_not: String
  affiliateId_in: [String!]
  affiliateId_not_in: [String!]
  affiliateId_lt: String
  affiliateId_lte: String
  affiliateId_gt: String
  affiliateId_gte: String
  affiliateId_contains: String
  affiliateId_not_contains: String
  affiliateId_starts_with: String
  affiliateId_not_starts_with: String
  affiliateId_ends_with: String
  affiliateId_not_ends_with: String
  disabled: Boolean
  disabled_not: Boolean
  AND: [MerchantScalarWhereInput!]
  OR: [MerchantScalarWhereInput!]
  NOT: [MerchantScalarWhereInput!]
}

type MerchantSubscriptionPayload {
  mutation: MutationType!
  node: Merchant
  updatedFields: [String!]
  previousValues: MerchantPreviousValues
}

input MerchantSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MerchantWhereInput
  AND: [MerchantSubscriptionWhereInput!]
  OR: [MerchantSubscriptionWhereInput!]
  NOT: [MerchantSubscriptionWhereInput!]
}

input MerchantUpdateInput {
  postedBy: UserUpdateOneWithoutAddedMerchantsInput
  updatedBy: UserUpdateOneWithoutEditedMerchantsInput
  flightControllers: FlightControllerMerchantLinkUpdateManyWithoutMerchantInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantUpdateManyDataInput {
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantUpdateManyMutationInput {
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantUpdateManyWithoutPostedByInput {
  create: [MerchantCreateWithoutPostedByInput!]
  delete: [MerchantWhereUniqueInput!]
  connect: [MerchantWhereUniqueInput!]
  set: [MerchantWhereUniqueInput!]
  disconnect: [MerchantWhereUniqueInput!]
  update: [MerchantUpdateWithWhereUniqueWithoutPostedByInput!]
  upsert: [MerchantUpsertWithWhereUniqueWithoutPostedByInput!]
  deleteMany: [MerchantScalarWhereInput!]
  updateMany: [MerchantUpdateManyWithWhereNestedInput!]
}

input MerchantUpdateManyWithoutUpdatedByInput {
  create: [MerchantCreateWithoutUpdatedByInput!]
  delete: [MerchantWhereUniqueInput!]
  connect: [MerchantWhereUniqueInput!]
  set: [MerchantWhereUniqueInput!]
  disconnect: [MerchantWhereUniqueInput!]
  update: [MerchantUpdateWithWhereUniqueWithoutUpdatedByInput!]
  upsert: [MerchantUpsertWithWhereUniqueWithoutUpdatedByInput!]
  deleteMany: [MerchantScalarWhereInput!]
  updateMany: [MerchantUpdateManyWithWhereNestedInput!]
}

input MerchantUpdateManyWithWhereNestedInput {
  where: MerchantScalarWhereInput!
  data: MerchantUpdateManyDataInput!
}

input MerchantUpdateOneRequiredWithoutFlightControllersInput {
  create: MerchantCreateWithoutFlightControllersInput
  update: MerchantUpdateWithoutFlightControllersDataInput
  upsert: MerchantUpsertWithoutFlightControllersInput
  connect: MerchantWhereUniqueInput
}

input MerchantUpdateWithoutFlightControllersDataInput {
  postedBy: UserUpdateOneWithoutAddedMerchantsInput
  updatedBy: UserUpdateOneWithoutEditedMerchantsInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantUpdateWithoutPostedByDataInput {
  updatedBy: UserUpdateOneWithoutEditedMerchantsInput
  flightControllers: FlightControllerMerchantLinkUpdateManyWithoutMerchantInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantUpdateWithoutUpdatedByDataInput {
  postedBy: UserUpdateOneWithoutAddedMerchantsInput
  flightControllers: FlightControllerMerchantLinkUpdateManyWithoutMerchantInput
  name: String
  url: String
  affiliateId: String
  disabled: Boolean
}

input MerchantUpdateWithWhereUniqueWithoutPostedByInput {
  where: MerchantWhereUniqueInput!
  data: MerchantUpdateWithoutPostedByDataInput!
}

input MerchantUpdateWithWhereUniqueWithoutUpdatedByInput {
  where: MerchantWhereUniqueInput!
  data: MerchantUpdateWithoutUpdatedByDataInput!
}

input MerchantUpsertWithoutFlightControllersInput {
  update: MerchantUpdateWithoutFlightControllersDataInput!
  create: MerchantCreateWithoutFlightControllersInput!
}

input MerchantUpsertWithWhereUniqueWithoutPostedByInput {
  where: MerchantWhereUniqueInput!
  update: MerchantUpdateWithoutPostedByDataInput!
  create: MerchantCreateWithoutPostedByInput!
}

input MerchantUpsertWithWhereUniqueWithoutUpdatedByInput {
  where: MerchantWhereUniqueInput!
  update: MerchantUpdateWithoutUpdatedByDataInput!
  create: MerchantCreateWithoutUpdatedByInput!
}

input MerchantWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  postedBy: UserWhereInput
  updatedBy: UserWhereInput
  flightControllers_every: FlightControllerMerchantLinkWhereInput
  flightControllers_some: FlightControllerMerchantLinkWhereInput
  flightControllers_none: FlightControllerMerchantLinkWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  affiliateId: String
  affiliateId_not: String
  affiliateId_in: [String!]
  affiliateId_not_in: [String!]
  affiliateId_lt: String
  affiliateId_lte: String
  affiliateId_gt: String
  affiliateId_gte: String
  affiliateId_contains: String
  affiliateId_not_contains: String
  affiliateId_starts_with: String
  affiliateId_not_starts_with: String
  affiliateId_ends_with: String
  affiliateId_not_ends_with: String
  disabled: Boolean
  disabled_not: Boolean
  AND: [MerchantWhereInput!]
  OR: [MerchantWhereInput!]
  NOT: [MerchantWhereInput!]
}

input MerchantWhereUniqueInput {
  id: ID
}

type Mutation {
  createFlightController(data: FlightControllerCreateInput!): FlightController!
  updateFlightController(data: FlightControllerUpdateInput!, where: FlightControllerWhereUniqueInput!): FlightController
  updateManyFlightControllers(data: FlightControllerUpdateManyMutationInput!, where: FlightControllerWhereInput): BatchPayload!
  upsertFlightController(where: FlightControllerWhereUniqueInput!, create: FlightControllerCreateInput!, update: FlightControllerUpdateInput!): FlightController!
  deleteFlightController(where: FlightControllerWhereUniqueInput!): FlightController
  deleteManyFlightControllers(where: FlightControllerWhereInput): BatchPayload!
  createFlightControllerMerchantLink(data: FlightControllerMerchantLinkCreateInput!): FlightControllerMerchantLink!
  updateFlightControllerMerchantLink(data: FlightControllerMerchantLinkUpdateInput!, where: FlightControllerMerchantLinkWhereUniqueInput!): FlightControllerMerchantLink
  updateManyFlightControllerMerchantLinks(data: FlightControllerMerchantLinkUpdateManyMutationInput!, where: FlightControllerMerchantLinkWhereInput): BatchPayload!
  upsertFlightControllerMerchantLink(where: FlightControllerMerchantLinkWhereUniqueInput!, create: FlightControllerMerchantLinkCreateInput!, update: FlightControllerMerchantLinkUpdateInput!): FlightControllerMerchantLink!
  deleteFlightControllerMerchantLink(where: FlightControllerMerchantLinkWhereUniqueInput!): FlightControllerMerchantLink
  deleteManyFlightControllerMerchantLinks(where: FlightControllerMerchantLinkWhereInput): BatchPayload!
  createLink(data: LinkCreateInput!): Link!
  updateLink(data: LinkUpdateInput!, where: LinkWhereUniqueInput!): Link
  updateManyLinks(data: LinkUpdateManyMutationInput!, where: LinkWhereInput): BatchPayload!
  upsertLink(where: LinkWhereUniqueInput!, create: LinkCreateInput!, update: LinkUpdateInput!): Link!
  deleteLink(where: LinkWhereUniqueInput!): Link
  deleteManyLinks(where: LinkWhereInput): BatchPayload!
  createMerchant(data: MerchantCreateInput!): Merchant!
  updateMerchant(data: MerchantUpdateInput!, where: MerchantWhereUniqueInput!): Merchant
  updateManyMerchants(data: MerchantUpdateManyMutationInput!, where: MerchantWhereInput): BatchPayload!
  upsertMerchant(where: MerchantWhereUniqueInput!, create: MerchantCreateInput!, update: MerchantUpdateInput!): Merchant!
  deleteMerchant(where: MerchantWhereUniqueInput!): Merchant
  deleteManyMerchants(where: MerchantWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createVote(data: VoteCreateInput!): Vote!
  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote
  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!
  deleteVote(where: VoteWhereUniqueInput!): Vote
  deleteManyVotes(where: VoteWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  flightController(where: FlightControllerWhereUniqueInput!): FlightController
  flightControllers(where: FlightControllerWhereInput, orderBy: FlightControllerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FlightController]!
  flightControllersConnection(where: FlightControllerWhereInput, orderBy: FlightControllerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FlightControllerConnection!
  flightControllerMerchantLink(where: FlightControllerMerchantLinkWhereUniqueInput!): FlightControllerMerchantLink
  flightControllerMerchantLinks(where: FlightControllerMerchantLinkWhereInput, orderBy: FlightControllerMerchantLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FlightControllerMerchantLink]!
  flightControllerMerchantLinksConnection(where: FlightControllerMerchantLinkWhereInput, orderBy: FlightControllerMerchantLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FlightControllerMerchantLinkConnection!
  link(where: LinkWhereUniqueInput!): Link
  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link]!
  linksConnection(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LinkConnection!
  merchant(where: MerchantWhereUniqueInput!): Merchant
  merchants(where: MerchantWhereInput, orderBy: MerchantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Merchant]!
  merchantsConnection(where: MerchantWhereInput, orderBy: MerchantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MerchantConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  vote(where: VoteWhereUniqueInput!): Vote
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!
  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!
  node(id: ID!): Node
}

enum ReceiverProtocol {
  CROSSFIRE
  FRSKY
  FLYSKY
  SPEKTRUM
}

type Subscription {
  flightController(where: FlightControllerSubscriptionWhereInput): FlightControllerSubscriptionPayload
  flightControllerMerchantLink(where: FlightControllerMerchantLinkSubscriptionWhereInput): FlightControllerMerchantLinkSubscriptionPayload
  link(where: LinkSubscriptionWhereInput): LinkSubscriptionPayload
  merchant(where: MerchantSubscriptionWhereInput): MerchantSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link!]
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]
  flightControllers(where: FlightControllerWhereInput, orderBy: FlightControllerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FlightController!]
  editedFlightControllers(where: FlightControllerWhereInput, orderBy: FlightControllerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FlightController!]
  addedMerchants(where: MerchantWhereInput, orderBy: MerchantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Merchant!]
  editedMerchants(where: MerchantWhereInput, orderBy: MerchantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Merchant!]
  AddedFlightControllers(where: FlightControllerMerchantLinkWhereInput, orderBy: FlightControllerMerchantLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FlightControllerMerchantLink!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  links: LinkCreateManyWithoutPostedByInput
  votes: VoteCreateManyWithoutUserInput
  flightControllers: FlightControllerCreateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerCreateManyWithoutUpdatedByInput
  addedMerchants: MerchantCreateManyWithoutPostedByInput
  editedMerchants: MerchantCreateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkCreateManyWithoutPostedByInput
}

input UserCreateOneWithoutAddedFlightControllersInput {
  create: UserCreateWithoutAddedFlightControllersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAddedMerchantsInput {
  create: UserCreateWithoutAddedMerchantsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutEditedFlightControllersInput {
  create: UserCreateWithoutEditedFlightControllersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutEditedMerchantsInput {
  create: UserCreateWithoutEditedMerchantsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutFlightControllersInput {
  create: UserCreateWithoutFlightControllersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutLinksInput {
  create: UserCreateWithoutLinksInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutVotesInput {
  create: UserCreateWithoutVotesInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAddedFlightControllersInput {
  id: ID
  name: String!
  email: String!
  password: String!
  links: LinkCreateManyWithoutPostedByInput
  votes: VoteCreateManyWithoutUserInput
  flightControllers: FlightControllerCreateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerCreateManyWithoutUpdatedByInput
  addedMerchants: MerchantCreateManyWithoutPostedByInput
  editedMerchants: MerchantCreateManyWithoutUpdatedByInput
}

input UserCreateWithoutAddedMerchantsInput {
  id: ID
  name: String!
  email: String!
  password: String!
  links: LinkCreateManyWithoutPostedByInput
  votes: VoteCreateManyWithoutUserInput
  flightControllers: FlightControllerCreateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerCreateManyWithoutUpdatedByInput
  editedMerchants: MerchantCreateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkCreateManyWithoutPostedByInput
}

input UserCreateWithoutEditedFlightControllersInput {
  id: ID
  name: String!
  email: String!
  password: String!
  links: LinkCreateManyWithoutPostedByInput
  votes: VoteCreateManyWithoutUserInput
  flightControllers: FlightControllerCreateManyWithoutPostedByInput
  addedMerchants: MerchantCreateManyWithoutPostedByInput
  editedMerchants: MerchantCreateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkCreateManyWithoutPostedByInput
}

input UserCreateWithoutEditedMerchantsInput {
  id: ID
  name: String!
  email: String!
  password: String!
  links: LinkCreateManyWithoutPostedByInput
  votes: VoteCreateManyWithoutUserInput
  flightControllers: FlightControllerCreateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerCreateManyWithoutUpdatedByInput
  addedMerchants: MerchantCreateManyWithoutPostedByInput
  AddedFlightControllers: FlightControllerMerchantLinkCreateManyWithoutPostedByInput
}

input UserCreateWithoutFlightControllersInput {
  id: ID
  name: String!
  email: String!
  password: String!
  links: LinkCreateManyWithoutPostedByInput
  votes: VoteCreateManyWithoutUserInput
  editedFlightControllers: FlightControllerCreateManyWithoutUpdatedByInput
  addedMerchants: MerchantCreateManyWithoutPostedByInput
  editedMerchants: MerchantCreateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkCreateManyWithoutPostedByInput
}

input UserCreateWithoutLinksInput {
  id: ID
  name: String!
  email: String!
  password: String!
  votes: VoteCreateManyWithoutUserInput
  flightControllers: FlightControllerCreateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerCreateManyWithoutUpdatedByInput
  addedMerchants: MerchantCreateManyWithoutPostedByInput
  editedMerchants: MerchantCreateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkCreateManyWithoutPostedByInput
}

input UserCreateWithoutVotesInput {
  id: ID
  name: String!
  email: String!
  password: String!
  links: LinkCreateManyWithoutPostedByInput
  flightControllers: FlightControllerCreateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerCreateManyWithoutUpdatedByInput
  addedMerchants: MerchantCreateManyWithoutPostedByInput
  editedMerchants: MerchantCreateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkCreateManyWithoutPostedByInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  links: LinkUpdateManyWithoutPostedByInput
  votes: VoteUpdateManyWithoutUserInput
  flightControllers: FlightControllerUpdateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerUpdateManyWithoutUpdatedByInput
  addedMerchants: MerchantUpdateManyWithoutPostedByInput
  editedMerchants: MerchantUpdateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkUpdateManyWithoutPostedByInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
}

input UserUpdateOneRequiredWithoutAddedFlightControllersInput {
  create: UserCreateWithoutAddedFlightControllersInput
  update: UserUpdateWithoutAddedFlightControllersDataInput
  upsert: UserUpsertWithoutAddedFlightControllersInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutVotesInput {
  create: UserCreateWithoutVotesInput
  update: UserUpdateWithoutVotesDataInput
  upsert: UserUpsertWithoutVotesInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutAddedMerchantsInput {
  create: UserCreateWithoutAddedMerchantsInput
  update: UserUpdateWithoutAddedMerchantsDataInput
  upsert: UserUpsertWithoutAddedMerchantsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutEditedFlightControllersInput {
  create: UserCreateWithoutEditedFlightControllersInput
  update: UserUpdateWithoutEditedFlightControllersDataInput
  upsert: UserUpsertWithoutEditedFlightControllersInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutEditedMerchantsInput {
  create: UserCreateWithoutEditedMerchantsInput
  update: UserUpdateWithoutEditedMerchantsDataInput
  upsert: UserUpsertWithoutEditedMerchantsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutFlightControllersInput {
  create: UserCreateWithoutFlightControllersInput
  update: UserUpdateWithoutFlightControllersDataInput
  upsert: UserUpsertWithoutFlightControllersInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutLinksInput {
  create: UserCreateWithoutLinksInput
  update: UserUpdateWithoutLinksDataInput
  upsert: UserUpsertWithoutLinksInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutAddedFlightControllersDataInput {
  name: String
  email: String
  password: String
  links: LinkUpdateManyWithoutPostedByInput
  votes: VoteUpdateManyWithoutUserInput
  flightControllers: FlightControllerUpdateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerUpdateManyWithoutUpdatedByInput
  addedMerchants: MerchantUpdateManyWithoutPostedByInput
  editedMerchants: MerchantUpdateManyWithoutUpdatedByInput
}

input UserUpdateWithoutAddedMerchantsDataInput {
  name: String
  email: String
  password: String
  links: LinkUpdateManyWithoutPostedByInput
  votes: VoteUpdateManyWithoutUserInput
  flightControllers: FlightControllerUpdateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerUpdateManyWithoutUpdatedByInput
  editedMerchants: MerchantUpdateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkUpdateManyWithoutPostedByInput
}

input UserUpdateWithoutEditedFlightControllersDataInput {
  name: String
  email: String
  password: String
  links: LinkUpdateManyWithoutPostedByInput
  votes: VoteUpdateManyWithoutUserInput
  flightControllers: FlightControllerUpdateManyWithoutPostedByInput
  addedMerchants: MerchantUpdateManyWithoutPostedByInput
  editedMerchants: MerchantUpdateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkUpdateManyWithoutPostedByInput
}

input UserUpdateWithoutEditedMerchantsDataInput {
  name: String
  email: String
  password: String
  links: LinkUpdateManyWithoutPostedByInput
  votes: VoteUpdateManyWithoutUserInput
  flightControllers: FlightControllerUpdateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerUpdateManyWithoutUpdatedByInput
  addedMerchants: MerchantUpdateManyWithoutPostedByInput
  AddedFlightControllers: FlightControllerMerchantLinkUpdateManyWithoutPostedByInput
}

input UserUpdateWithoutFlightControllersDataInput {
  name: String
  email: String
  password: String
  links: LinkUpdateManyWithoutPostedByInput
  votes: VoteUpdateManyWithoutUserInput
  editedFlightControllers: FlightControllerUpdateManyWithoutUpdatedByInput
  addedMerchants: MerchantUpdateManyWithoutPostedByInput
  editedMerchants: MerchantUpdateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkUpdateManyWithoutPostedByInput
}

input UserUpdateWithoutLinksDataInput {
  name: String
  email: String
  password: String
  votes: VoteUpdateManyWithoutUserInput
  flightControllers: FlightControllerUpdateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerUpdateManyWithoutUpdatedByInput
  addedMerchants: MerchantUpdateManyWithoutPostedByInput
  editedMerchants: MerchantUpdateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkUpdateManyWithoutPostedByInput
}

input UserUpdateWithoutVotesDataInput {
  name: String
  email: String
  password: String
  links: LinkUpdateManyWithoutPostedByInput
  flightControllers: FlightControllerUpdateManyWithoutPostedByInput
  editedFlightControllers: FlightControllerUpdateManyWithoutUpdatedByInput
  addedMerchants: MerchantUpdateManyWithoutPostedByInput
  editedMerchants: MerchantUpdateManyWithoutUpdatedByInput
  AddedFlightControllers: FlightControllerMerchantLinkUpdateManyWithoutPostedByInput
}

input UserUpsertWithoutAddedFlightControllersInput {
  update: UserUpdateWithoutAddedFlightControllersDataInput!
  create: UserCreateWithoutAddedFlightControllersInput!
}

input UserUpsertWithoutAddedMerchantsInput {
  update: UserUpdateWithoutAddedMerchantsDataInput!
  create: UserCreateWithoutAddedMerchantsInput!
}

input UserUpsertWithoutEditedFlightControllersInput {
  update: UserUpdateWithoutEditedFlightControllersDataInput!
  create: UserCreateWithoutEditedFlightControllersInput!
}

input UserUpsertWithoutEditedMerchantsInput {
  update: UserUpdateWithoutEditedMerchantsDataInput!
  create: UserCreateWithoutEditedMerchantsInput!
}

input UserUpsertWithoutFlightControllersInput {
  update: UserUpdateWithoutFlightControllersDataInput!
  create: UserCreateWithoutFlightControllersInput!
}

input UserUpsertWithoutLinksInput {
  update: UserUpdateWithoutLinksDataInput!
  create: UserCreateWithoutLinksInput!
}

input UserUpsertWithoutVotesInput {
  update: UserUpdateWithoutVotesDataInput!
  create: UserCreateWithoutVotesInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  links_every: LinkWhereInput
  links_some: LinkWhereInput
  links_none: LinkWhereInput
  votes_every: VoteWhereInput
  votes_some: VoteWhereInput
  votes_none: VoteWhereInput
  flightControllers_every: FlightControllerWhereInput
  flightControllers_some: FlightControllerWhereInput
  flightControllers_none: FlightControllerWhereInput
  editedFlightControllers_every: FlightControllerWhereInput
  editedFlightControllers_some: FlightControllerWhereInput
  editedFlightControllers_none: FlightControllerWhereInput
  addedMerchants_every: MerchantWhereInput
  addedMerchants_some: MerchantWhereInput
  addedMerchants_none: MerchantWhereInput
  editedMerchants_every: MerchantWhereInput
  editedMerchants_some: MerchantWhereInput
  editedMerchants_none: MerchantWhereInput
  AddedFlightControllers_every: FlightControllerMerchantLinkWhereInput
  AddedFlightControllers_some: FlightControllerMerchantLinkWhereInput
  AddedFlightControllers_none: FlightControllerMerchantLinkWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

type Vote {
  id: ID!
  link: Link!
  user: User!
}

type VoteConnection {
  pageInfo: PageInfo!
  edges: [VoteEdge]!
  aggregate: AggregateVote!
}

input VoteCreateInput {
  id: ID
  link: LinkCreateOneWithoutVotesInput!
  user: UserCreateOneWithoutVotesInput!
}

input VoteCreateManyWithoutLinkInput {
  create: [VoteCreateWithoutLinkInput!]
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateManyWithoutUserInput {
  create: [VoteCreateWithoutUserInput!]
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateWithoutLinkInput {
  id: ID
  user: UserCreateOneWithoutVotesInput!
}

input VoteCreateWithoutUserInput {
  id: ID
  link: LinkCreateOneWithoutVotesInput!
}

type VoteEdge {
  node: Vote!
  cursor: String!
}

enum VoteOrderByInput {
  id_ASC
  id_DESC
}

type VotePreviousValues {
  id: ID!
}

input VoteScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  AND: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  NOT: [VoteScalarWhereInput!]
}

type VoteSubscriptionPayload {
  mutation: MutationType!
  node: Vote
  updatedFields: [String!]
  previousValues: VotePreviousValues
}

input VoteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VoteWhereInput
  AND: [VoteSubscriptionWhereInput!]
  OR: [VoteSubscriptionWhereInput!]
  NOT: [VoteSubscriptionWhereInput!]
}

input VoteUpdateInput {
  link: LinkUpdateOneRequiredWithoutVotesInput
  user: UserUpdateOneRequiredWithoutVotesInput
}

input VoteUpdateManyWithoutLinkInput {
  create: [VoteCreateWithoutLinkInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutLinkInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutLinkInput!]
  deleteMany: [VoteScalarWhereInput!]
}

input VoteUpdateManyWithoutUserInput {
  create: [VoteCreateWithoutUserInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [VoteScalarWhereInput!]
}

input VoteUpdateWithoutLinkDataInput {
  user: UserUpdateOneRequiredWithoutVotesInput
}

input VoteUpdateWithoutUserDataInput {
  link: LinkUpdateOneRequiredWithoutVotesInput
}

input VoteUpdateWithWhereUniqueWithoutLinkInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutLinkDataInput!
}

input VoteUpdateWithWhereUniqueWithoutUserInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutUserDataInput!
}

input VoteUpsertWithWhereUniqueWithoutLinkInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutLinkDataInput!
  create: VoteCreateWithoutLinkInput!
}

input VoteUpsertWithWhereUniqueWithoutUserInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutUserDataInput!
  create: VoteCreateWithoutUserInput!
}

input VoteWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  link: LinkWhereInput
  user: UserWhereInput
  AND: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  NOT: [VoteWhereInput!]
}

input VoteWhereUniqueInput {
  id: ID
}
`
      }
